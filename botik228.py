import telebot
import random
import pickle
import os
import requests
from io import BytesIO

TOKEN = '7798488343:AAHUeygP3dJLCy4ynNajG4tFfGurFhYDVPE'  # üîÅ –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot(TOKEN)

DATA_FILE = "collections.pkl"

# üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π
if os.path.exists(DATA_FILE):
    with open(DATA_FILE, "rb") as f:
        user_collections = pickle.load(f)
else:
    user_collections = {}


def save_data():
    with open(DATA_FILE, "wb") as f:
        pickle.dump(user_collections, f)


def rarity_stars(rarity):
    return "‚≠ê" * rarity


# üé≤ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ç—ë–Ω–∫–∞
def generate_kitten():
    kitten_id = random.randint(100000, 999999)

    # –°—Ç–∞–±–∏–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    image_url = f"https://cataas.com/cat?width=300&height=300&uniq={kitten_id}"

    # –®–∞–Ω—Å: 70% –æ–±—ã—á–Ω—ã–π, 25% —Ä–µ–¥–∫–∏–π, 5% –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π
    roll = random.randint(1, 100)
    if roll <= 5:
        rarity = 5
    elif roll <= 30:
        rarity = 4
    else:
        rarity = 3

    return {"id": kitten_id, "url": image_url, "rarity": rarity}


@bot.message_handler(commands=['—Å–ø–∞—Ç'])
def start(message):
    welcome = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –∫–∞–∑–∏–∫ –∫–æ—Ç—è—Ç, —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä –≤—Å–ø–∞—Ç—ã—à–µ–π!\n\n"
        "üìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: (–ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ @freekittens)\n"
        "üê± /cat ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–≥–æ –º—è–≥–∫–æ–≥–æ –∏ –≤—Å—Ä–∞—Ç–æ–≥–æ\n"
        "üìñ /collection ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –∫–æ–ª–ª–µ–∫—Ü–∏—é\n"
        "üèÜ /top ‚Äî —Ç–æ–ø –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä–æ–≤\n"
        "üèÜ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ @freekittens \n"
        "‚ÑπÔ∏è /help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"
    )
    bot.send_message(message.chat.id, welcome)


@bot.message_handler(commands=['help'])
def help_command(message):
    start(message)

@bot.message_handler(commands=['broadcast'])
def broadcast_command(message):
    if message.from_user.username != "saygexteam":
        bot.reply_to(message, "‚õî –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return

    msg = bot.reply_to(message, "‚úèÔ∏è –í–≤–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:")
    bot.register_next_step_handler(msg, send_broadcast)


def send_broadcast(message):
    if message.from_user.username != "saygexteam":
        return

    broadcast_text = message.text
    count = 0
    failed = 0

    for user_id in user_collections:
        try:
            bot.send_message(user_id, f"üì¢ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n{broadcast_text}")
            count += 1
        except Exception as e:
            failed += 1
            print(f"[–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {user_id}]: {e}")

    bot.send_message(message.chat.id, f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.\n‚ùå –û—à–∏–±–æ–∫: {failed}.")



@bot.message_handler(commands=['cat'])
def send_cat(message):
    user_id = message.from_user.id
    kitten = generate_kitten()

    if user_id not in user_collections:
        user_collections[user_id] = []

    already_has = kitten["id"] in user_collections[user_id]
    if not already_has:
        user_collections[user_id].append(kitten["id"])
        save_data()

    caption = f"{rarity_stars(kitten['rarity'])} –ö–æ—Ç—ë–Ω–æ–∫ ‚Ññ{kitten['id']}\n"
    caption += "–¢—ã —É–∂–µ –≤–∏–¥–µ–ª –µ–≥–æ!" if already_has else "–î–æ–±–∞–≤–ª–µ–Ω –≤ —Ç–≤–æ—é –∫–æ–ª–ª–µ–∫—Ü–∏—é!"

    # –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ —Ñ–∞–π–ª
    try:
        response = requests.get(kitten["url"])
        response.raise_for_status()
        photo = BytesIO(response.content)
        photo.name = 'kitten.jpg'
        bot.send_photo(message.chat.id, photo=photo, caption=caption)
    except Exception as e:
        bot.send_message(message.chat.id, "üòø –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ—Ç—ë–Ω–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")
        print("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", e)


@bot.message_handler(commands=['collection'])
def collection(message):
    user_id = message.from_user.id
    collection = user_collections.get(user_id, [])

    if not collection:
        bot.reply_to(message, "–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –∫–æ—Ç—è—Ç üòø –ù–∞–ø–∏—à–∏ /cat, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–æ–±–∏—Ä–∞—Ç—å!")
        return

    response = f"üêæ –£ —Ç–µ–±—è {len(collection)} –∫–æ—Ç—è—Ç!\n"
    response += "–ö–∞–∂–¥—ã–π —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –∏ —Ä–µ–¥–∫–æ—Å—Ç—å—é."
    bot.reply_to(message, response)


@bot.message_handler(commands=['top'])
def top(message):
    if not user_collections:
        bot.reply_to(message, "–¢–æ–ø –ø–æ–∫–∞ –ø—É—Å—Ç ü´•")
        return

    top_list = sorted(user_collections.items(), key=lambda x: len(x[1]), reverse=True)
    text = ("üèÜ –¢–æ–ø –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä–æ–≤ –∫–æ—Ç—è—Ç:\n"
            "üòø ( –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ @freekittens )üòø\n"
            )
    for i, (uid, kittens_list) in enumerate(top_list[:5], start=1):
        try:
            user = bot.get_chat(uid)
            username = user.first_name or f"User {uid}"
        except:
            username = f"User {uid}"
        text += f"{i}. {username} ‚Äî {len(kittens_list)} –∫–æ—Ç—è—Ç\n"

    bot.reply_to(message, text)


# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
bot.polling()
